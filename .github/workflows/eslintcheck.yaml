name: Preview Pull Request on Netlify

on: 
  pull_request:

permissions:
  pull-requests: write

jobs:
  build-and-preview:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Project
        run: npm run build

      - name: Install Netlify CLI
        run: npm install netlify-cli@17.10.1 -g

      - name: Deploy to Netlify
        id: netlify_deploy
        run: |
          netlify deploy \
            --dir build \
            --site ${{ secrets.NETLIFY_SITE_ID }} \
            --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} \
            --json \
            --prod-if-unlocked=false \
            > deploy_output.json

      - name: Extract Preview URL
        id: extract_url
        run: |
          NETLIFY_PREVIEW_URL=$(jq -r '.deploy_url' deploy_output.json)
          echo "NETLIFY_PREVIEW_URL=$NETLIFY_PREVIEW_URL" >> "$GITHUB_OUTPUT"

      - name: Comment Preview URL on PR
        uses: actions/github-script@v7
        env:
          NETLIFY_PREVIEW_URL: ${{ steps.extract_url.outputs.NETLIFY_PREVIEW_URL }}
        with:
          script: |
            async function comment() {
              const result = await github.rest.repos.listPullRequestsAssociatedWithCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: context.sha,
              });

              if (result.data.length > 0) {
                const issueNumber = result.data[0].number;
                await github.rest.issues.createComment({
                  issue_number: issueNumber,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: 'Preview URL: ' + process.env.NETLIFY_PREVIEW_URL
                });
              } else {
                console.log('No PR found for commit ' + context.sha);
              }
            }
            comment()
